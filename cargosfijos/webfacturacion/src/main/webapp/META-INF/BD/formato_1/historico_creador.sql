/*
USE master;
GO
DROP DATABASE GAF_FACTURACION;
GO
CREATE DATABASE GAF_FACTURACION;
GO
*/
USE GAF_FACTURACION;
GO
CREATE TABLE HMTIPO_DOCU(
	CO_TIPO_DOCU TINYINT NOT NULL,
	NO_TIPO_DOCU VARCHAR(30) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMTIPO_DOCU ON TMTIPO_DOCU AFTER UPDATE,INSERT AS INSERT INTO HMTIPO_DOCU SELECT * FROM inserted;
GO
CREATE TABLE HMTIPO_CLIE(
	CO_TIPO_CLIE TINYINT NOT NULL,
	NO_TIPO_CLIE VARCHAR(30) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMTIPO_CLIE ON TMTIPO_CLIE AFTER UPDATE,INSERT AS INSERT INTO HMTIPO_CLIE SELECT * FROM inserted;
GO
CREATE TABLE HMCLIE(
	CO_CLIE INT NOT NULL,
	NO_RAZO VARCHAR(120) NULL,
	NO_CLIE VARCHAR(50) NULL,
	AP_CLIE VARCHAR(50) NULL,
	DE_CODI_BUM VARCHAR(10) NULL,
	DE_DIGI_BUM VARCHAR(5) NULL,-- digito verificador
	CO_SUCU_FISC INT NULL,
	CO_CONT_CLIE_REPR_LEGA INT NULL,
	CO_TIPO_CLIE TINYINT NULL,
	CO_TIPO_DOCU TINYINT NOT NULL,	
	DE_NUME_DOCU CHAR(30) NOT NULL,
	DE_EJEC VARCHAR(100) NULL,-- ejecutivo
	DE_SUB_GERE VARCHAR(100) NULL,-- sub gerente
	DE_SEGM VARCHAR(30) NULL,-- segmento
	CO_XLS CHAR (10) NULL,-- debug pruebas borrar
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMCLIE ON TMCLIE AFTER UPDATE,INSERT AS INSERT INTO HMCLIE SELECT * FROM inserted;
GO
CREATE TABLE HMCONT_CLIE(-- contacto cliente
	CO_CONT_CLIE INT NOT NULL,
	CO_CLIE INT NOT NULL,
	CO_TIPO_DOCU TINYINT NULL,	
	DE_NUME_DOCU CHAR(30) NULL,
	NO_CONT_CLIE VARCHAR(100) NULL,
	AP_CONT_CLIE VARCHAR(100) NULL,
	DE_CORR VARCHAR(50) NULL,
	DE_TELE VARCHAR(50) NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMCONT_CLIE ON TMCONT_CLIE AFTER UPDATE,INSERT AS INSERT INTO HMCONT_CLIE SELECT * FROM inserted;
GO
CREATE TABLE HMDEPA(
	CO_DEPA SMALLINT NOT NULL,
	NO_DEPA VARCHAR(50) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMDEPA ON TMDEPA AFTER UPDATE,INSERT AS INSERT INTO HMDEPA SELECT * FROM inserted;
GO
CREATE TABLE HMPROV(
	CO_PROV INT NOT NULL,
	NO_PROV VARCHAR(50) NOT NULL,
	CO_DEPA SMALLINT NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMPROV ON TMPROV AFTER UPDATE,INSERT AS INSERT INTO HMPROV SELECT * FROM inserted;
GO
CREATE TABLE HMDIST(
	CO_DIST INT NOT NULL,
	NO_DIST VARCHAR(50) NOT NULL,
	CO_PROV INT NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMDIST ON TMDIST AFTER UPDATE,INSERT AS INSERT INTO HMDIST SELECT * FROM inserted;
GO
CREATE TABLE HMSUCU(
	CO_SUCU INT NOT NULL,
	DE_DIRE VARCHAR(200) NOT NULL,
	CO_DIST INT NOT NULL,
	CO_CLIE INT NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMSUCU ON TMSUCU AFTER UPDATE,INSERT AS INSERT INTO HMSUCU SELECT * FROM inserted;
GO
CREATE TABLE HMPERI_FACT(-- PERIODO 15 DIAS, 1 MES ... (anual, semestral, trimestral, mensual )
	CO_PERI_FACT TINYINT NOT NULL,
	NO_PERI_FACT VARCHAR(100) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMPERI_FACT ON TMPERI_FACT AFTER UPDATE,INSERT AS INSERT INTO HMPERI_FACT SELECT * FROM inserted;
GO
CREATE TABLE HMTIPO_FACT(-- VENCIDO O ADELANTADO
	CO_TIPO_FACT TINYINT NOT NULL,
	NO_TIPO_FACT VARCHAR(100) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMTIPO_FACT ON TMTIPO_FACT AFTER UPDATE,INSERT AS INSERT INTO HMTIPO_FACT SELECT * FROM inserted;
GO
CREATE TABLE HMMONE_FACT(-- SOLES O DOLARES
	CO_MONE_FACT TINYINT NOT NULL,
	NO_MONE_FACT VARCHAR(100) NOT NULL,
	DE_SIMB CHAR(5) NOT NULL,-- SIMBOLO
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMMONE_FACT ON TMMONE_FACT AFTER UPDATE,INSERT AS INSERT INTO HMMONE_FACT SELECT * FROM inserted;
GO
CREATE TABLE HMPROD(
	CO_PROD TINYINT NOT NULL,
	CO_TIPO_FACT TINYINT NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	CO_PERI_FACT TINYINT NOT NULL,
	NO_PROD VARCHAR(100) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMPROD ON TMPROD AFTER UPDATE,INSERT AS INSERT INTO HMPROD SELECT * FROM inserted;
GO
CREATE TABLE HMPLAN_MEDI_INST(
	CO_PLAN_MEDI_INST TINYINT NOT NULL,
	NO_PLAN_MEDI_INST VARCHAR(30),-- Gilat  / Idirect  / Backup / SCP
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMPLAN_MEDI_INST ON TMPLAN_MEDI_INST AFTER UPDATE,INSERT AS INSERT INTO HMPLAN_MEDI_INST SELECT * FROM inserted;
GO
CREATE TABLE HMPLAN(
	CO_PLAN INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
	NO_PLAN VARCHAR(100) NOT NULL,
	DE_VELO_SUBI VARCHAR(15) NULL, -- bytes
	DE_VELO_BAJA VARCHAR(15) NULL, -- bytes
	CO_PLAN_MEDI_INST TINYINT NULL,
	IM_MONTO DECIMAL(15,2) NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	CO_XLS CHAR (10) NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMPLAN ON TMPLAN AFTER UPDATE,INSERT AS INSERT INTO HMPLAN SELECT * FROM inserted;
GO
CREATE TABLE HMSERV_SUPL(
	CO_SERV_SUPL INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
    CO_MONE_FACT TINYINT NOT NULL,
	NO_SERV_SUPL VARCHAR(100) NOT NULL,
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_AFEC_DETR BIT NOT NULL DEFAULT 0,-- AFECTO A DETRACCION
	CO_XLS CHAR (10) NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMSERV_SUPL ON TMSERV_SUPL AFTER UPDATE,INSERT AS INSERT INTO HMSERV_SUPL SELECT * FROM inserted;
GO
CREATE TABLE HMSERV_UNIC(-- Servicios suplementarios de cobro unico
	CO_SERV_UNIC INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
    CO_MONE_FACT TINYINT NOT NULL,
	NO_SERV_UNIC VARCHAR(100) NOT NULL,	
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_AFEC_DETR BIT NOT NULL DEFAULT 1,-- AFECTO A DETRACCION
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMSERV_UNIC ON TMSERV_UNIC AFTER UPDATE,INSERT AS INSERT INTO HMSERV_UNIC SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO(
	CO_NEGO INT NOT NULL,
	CO_SUCU_CORR INT NOT NULL,-- Sucursal de correspondencia
	CO_CLIE INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
	CO_TIPO_FACT TINYINT NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	CO_PERI_FACT TINYINT NOT NULL,
	-- DE_DIA_FACT TINYINT NULL,-- dia que el cliente factura cuando es trimestral, semestral anual ejm si es 12 factura 12/01/2015 12/04/2015 . . .
	ST_FACT_DEBU BIT NOT NULL DEFAULT 1, -- borrar para saber cual debe factura para pruebas
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
		
);
GO
CREATE TRIGGER TR_HMNEGO ON TMNEGO AFTER UPDATE,INSERT AS INSERT INTO HMNEGO SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO_SUCU(
	CO_NEGO_SUCU INT NOT NULL,
	CO_NEGO INT NOT NULL,
	CO_SUCU INT NOT NULL,
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,-- SI ES UNA OIT TIPO SOARC
	CO_OIT_INST INT NULL,
	CO_CIRC INT NULL,
	ST_SOAR_DESI BIT NULL DEFAULT 0,-- SI ES UNA OIT TIPO SOARC
	CO_OIT_DESI INT NULL,
	DE_ORDE_SERV VARCHAR(100) NULL,	-- orden de servicio
	DE_PLAZ_CONT VARCHAR(100) NULL,  -- plazo de contrato
	ST_ELIM BIT DEFAULT 0,

	CO_MOTI_DESC TINYINT NULL,
	DE_INFO_DESC VARCHAR(200) NULL,

	CO_NEGO_SUCU_CESI_CONT_PADR INT NULL,--codigo de cesión contractual que genero
	CO_NEGO_SUCU_CESI_CONT_HIJO INT NULL,--codigo de cesión contractual que genero


	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMNEGO_SUCU ON TMNEGO_SUCU AFTER UPDATE,INSERT AS INSERT INTO HMNEGO_SUCU SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO_SUCU_PLAN(
	CO_NEGO_SUCU_PLAN INT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,
	CO_OIT_INST INT NULL,
	ST_SOAR_DESI BIT NULL DEFAULT 0,
	CO_OIT_DESI INT NULL,
	CO_PLAN INT NOT NULL,
	NO_PLAN VARCHAR(100),
	DE_VELO_SUBI VARCHAR(15) NULL, -- bk valor
	DE_VELO_BAJA VARCHAR(15) NULL, -- bk valor
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	FE_ULTI_FACT DATE NULL, -- ULTIMA FACTURACION
	-- ULTIMA FACTURACION Siguiente, esta es temporal para que cuando se termine el cierre se remplazase con la que diga en FE_ULTI_FACT
	FE_ULTI_FACT_SGTE DATE NULL,-- FE_ULTI_FACT_SGTE==>> FE_ULTI_FACT
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMNEGO_SUCU_PLAN ON TMNEGO_SUCU_PLAN AFTER UPDATE,INSERT AS INSERT INTO HMNEGO_SUCU_PLAN SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO_SUCU_SERV_SUPL(
	CO_NEGO_SUCU_SERV_SUPL INT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,
	CO_OIT_INST INT NULL,
	ST_SOAR_DESI BIT NULL DEFAULT 0,
	CO_OIT_DESI INT NULL,
	CO_SERV_SUPL INT NOT NULL,
	NO_SERV_SUPL VARCHAR(100),
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	FE_ULTI_FACT DATE NULL, -- ULTIMA FACTURACION
	-- ULTIMA FACTURACION Siguiente, esta es temporal para que cuando se termine el cierre se remplazase con la que diga en FE_ULTI_FACT
	FE_ULTI_FACT_SGTE DATE NULL,-- FE_ULTI_FACT_SGTE==>> FE_ULTI_FACT
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_AFEC_DETR BIT NOT NULL DEFAULT 0,-- AFECTO A DETRACCION	
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMNEGO_SUCU_SERV_SUPL ON TMNEGO_SUCU_SERV_SUPL AFTER UPDATE,INSERT AS INSERT INTO HMNEGO_SUCU_SERV_SUPL SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO_SUCU_SERV_UNIC(-- servicios suplementarios unicos un solo cobro
	CO_NEGO_SUCU_SERV_UNIC INT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,
	CO_OIT_INST INT NULL,
	CO_SERV_UNIC INT NOT NULL,
	NO_SERV_UNIC VARCHAR(100),
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_AFEC_DETR BIT NOT NULL DEFAULT 1,-- AFECTO A DETRACCION	
	ST_ELIM BIT DEFAULT 0,
	CO_CIER_COBR INT NULL,-- cierre que se cobro el servicio unico, si es NULL aun no se cobra

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMNEGO_SUCU_SERV_UNIC ON TMNEGO_SUCU_SERV_UNIC AFTER UPDATE,INSERT AS INSERT INTO HMNEGO_SUCU_SERV_UNIC SELECT * FROM inserted;
GO
CREATE TABLE HMCIER(
	CO_CIER INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
	NU_PERI TINYINT NOT NULL,
	NU_ANO  SMALLINT NOT NULL,
	NU_TIPO_CAMB DECIMAL(12,2) NOT NULL,
	DE_RAIZ_RECI BIGINT NOT NULL,-- desde que numero comienza a crear el recibo
	DE_RAIZ_FACT BIGINT NOT NULL,-- desde que numero comienza a crear la factura (Detracciones)
	FE_EMIS DATE NOT NULL,-- fecha de emisi�n
	FE_VENC DATE NOT NULL,-- fecha de vencimiento
	ST_CIER TINYINT NOT NULL, -- Estado 1 pendiente, 2 en cierre, 3 termino cierre, 4 cerrado
	FH_INIC DATETIME NULL,
	FH_FIN DATETIME NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMCIER ON TMCIER AFTER UPDATE,INSERT AS INSERT INTO HMCIER SELECT * FROM inserted;
GO
CREATE TABLE HMAJUS(
	CO_AJUS INT NOT NULL, -- ajustes
	CO_NEGO INT NOT NULL, 
	DE_GLOS VARCHAR(200) NOT NULL,	
	IM_MONT DECIMAL(10,2) NOT NULL, 
	ST_AFEC_IGV BIT NOT NULL,-- afecto a IGV
	CO_CIER_APLI INT NULL, -- en que cierre se aplico si es null no se aplico y generara nota de credito
	ST_PEND BIT NOT NULL DEFAULT 1,-- los que estan pendiente aplicar, 1 pendiente , 0 atendido. Cuando se cierre el ciclo se cambiara a 0 (no pendiente).

	CO_USUA_CREO SMALLINT,
	CO_USUA_MODI SMALLINT,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMAJUS ON TMAJUS AFTER UPDATE,INSERT AS INSERT INTO HMAJUS SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO_PROM( -- Promoción por negocio
	CO_NEGO_PROM INT NOT NULL,
	CO_NEGO INT NOT NULL, 
	DE_TIPO TINYINT NOT NULL, -- los tipos son 1 por porcentaje, 2 por monto
	IM_VALO DECIMAL(10,2) NOT NULL, -- en el caso tipo monto la moneda es idiferrente
	ST_PLAN BIT NOT NULL DEFAULT 0,-- se aplica por plan, solo sirve para cuando el tipo es %
	ST_SERV_SUPL BIT NOT NULL DEFAULT 0,-- se aplica por SS, solo sirve para cuando el tipo es %
	DE_PERI_INIC TINYINT NOT NULL,
	DE_ANO_INIC SMALLINT NOT NULL,
	DE_PERI_FIN TINYINT NOT NULL,
	DE_ANO_FIN SMALLINT NOT NULL,

	CO_USUA_CREO SMALLINT NULL,
	CO_USUA_MODI SMALLINT NULL,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMNEGO_PROM ON TMNEGO_PROM AFTER UPDATE,INSERT AS INSERT INTO HMNEGO_PROM SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO_SUCU_PROM( -- Promoción por negocio
	CO_NEGO_SUCU_PROM INT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	DE_TIPO TINYINT NOT NULL, -- los tipos son 1 por porcentaje, 2 por monto
	IM_VALO DECIMAL(10,2) NOT NULL, -- en el caso tipo monto la moneda es idiferrente
	ST_PLAN BIT NOT NULL DEFAULT 0,-- se aplica por plan, solo sirve para cuando el tipo es %
	ST_SERV_SUPL BIT NOT NULL DEFAULT 0,-- se aplica por SS, solo sirve para cuando el tipo es %
	DE_PERI_INIC TINYINT NOT NULL,
	DE_ANO_INIC SMALLINT NOT NULL,
	DE_PERI_FIN TINYINT NOT NULL,
	DE_ANO_FIN SMALLINT NOT NULL,

	CO_USUA_CREO SMALLINT NULL,
	CO_USUA_MODI SMALLINT NULL,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMNEGO_SUCU_PROM ON TMNEGO_SUCU_PROM AFTER UPDATE,INSERT AS INSERT INTO HMNEGO_SUCU_PROM SELECT * FROM inserted;
GO
CREATE TABLE HMCIER_LOGS(
	CO_CIER_LOGS BIGINT NOT NULL,
	CO_CIER INT NULL,
	CO_NEGO INT NULL,
	CO_NEGO_SUCU INT NULL,
	ST_ERRO BIT DEFAULT 0 NOT NULL,
	DE_LOG VARCHAR(1024) NOT NULL,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMCIER_LOGS ON TMCIER_LOGS AFTER UPDATE,INSERT AS INSERT INTO HMCIER_LOGS SELECT * FROM inserted;
GO
CREATE TABLE HMNEGO_SALD(
	CO_NEGO_SALDO INT NOT NULL,
	CO_NEGO INT NOT NULL,
	CO_CIER INT NOT NULL,
	IM_MONT DECIMAL(12,2) NOT NULL,
	DE_SALD VARCHAR(100),
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMNEGO_SALD ON TMNEGO_SALD AFTER UPDATE,INSERT AS INSERT INTO HMNEGO_SALD SELECT * FROM inserted;
GO
CREATE TABLE HMRECI( -- RECIBO
	CO_RECI BIGINT NOT NULL,
	CO_CIER INT NOT NULL,
	CO_NEGO INT NOT NULL,
	DE_PERI VARCHAR(200) NOT NULL,
	IM_NETO DECIMAL(12,2) NOT NULL,
	IM_AJUS_SIGV DECIMAL(12,2) NOT NULL,
	IM_IGV DECIMAL(12,2) NOT NULL,
	IM_TOTA DECIMAL(12,2) NOT NULL,
	IM_AJUS_NIGV DECIMAL(12,2) NOT NULL,

	IM_INST DECIMAL(12,2) NOT NULL,
	IM_SERV_MENS DECIMAL(12,2) NOT NULL,
	IM_ALQU DECIMAL(12,2) NOT NULL,
	IM_OTRO DECIMAL(12,2) NOT NULL,
	IM_DESC DECIMAL(12,2) NOT NULL,
	ST_ANUL BIT DEFAULT 0 NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	-- historico
	FE_EMIS DATE NOT NULL,-- fecha de emisi�n
	FE_VENC DATE NOT NULL,-- fecha de vencimiento	
	CO_CLIE INT NOT NULL, -- no se modifica los codigos solo los textos
	DE_CODI_BUM VARCHAR(20) NULL,
	NO_CLIE VARCHAR(100) NOT NULL,
	DE_DIRE_FISC VARCHAR(200) NOT NULL,	
	CO_DIST_FISC INT NOT NULL,
	NO_DIST_FISC VARCHAR(50) NOT NULL,
	CO_TIPO_DOCU TINYINT NOT NULL,
	NO_TIPO_DOCU VARCHAR(50) NOT NULL,
	DE_NUME_DOCU CHAR(30) NOT NULL,-- numero documento del cliente (RUC , DNI)
	DE_DIRE_CORR VARCHAR(200) NOT NULL,
	CO_DIST_CORR INT NOT NULL,
	NO_DIST_CORR VARCHAR(50) NOT NULL,
	DE_DIRE_INST VARCHAR(200) NOT NULL,
	CO_DIST_INST INT NOT NULL,
	NO_DIST_INST VARCHAR(50) NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	NO_MONE_FACT VARCHAR(30) NOT NULL,
	DE_SIMB_MONE_FACT CHAR(5) NOT NULL,-- SIMBOLO

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMRECI ON TMRECI AFTER UPDATE,INSERT AS INSERT INTO HMRECI SELECT * FROM inserted;
GO
CREATE TABLE HMRECI_GLOS(
	CO_RECI_GLOS INT NOT NULL,
	CO_RECI BIGINT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	NO_GLOS VARCHAR(100) NOT NULL,
	IM_MONT DECIMAL(12,2) NOT NULL,
	TI_GLOS TINYINT NOT NULL,-- 1 Plan, 2 SS , 10 Devolucion de CF
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMRECI_GLOS ON TMRECI_GLOS AFTER UPDATE,INSERT AS INSERT INTO HMRECI_GLOS SELECT * FROM inserted;
GO
-- Facturas las que se generan de las detracciones
CREATE TABLE HMFACT(
	CO_FACT BIGINT NOT NULL,
	CO_CIER INT NOT NULL,
	CO_NEGO INT NOT NULL,
	IM_VALO_VENT DECIMAL(12,2) NOT NULL,
	IM_VALO_DESC DECIMAL(12,2) NOT NULL,
	IM_VALO_VENT_NETO DECIMAL(12,2) NOT NULL,
	IM_IGV DECIMAL(12,2) NOT NULL,
	IM_TOTA DECIMAL(12,2) NOT NULL,
	DE_MONT VARCHAR(100) NOT NULL,
	ST_ANUL BIT DEFAULT 0 NOT NULL,
	ST_ELIM BIT DEFAULT 0 NOT NULL,



	-- historico
	FE_EMIS DATE NOT NULL,-- fecha de emisi�n
	FE_VENC DATE NOT NULL,-- fecha de vencimiento	
	CO_CLIE INT NOT NULL,
	DE_CODI_BUM VARCHAR(20) NULL,
	NO_CLIE VARCHAR(100) NOT NULL,
	DE_DIRE_FISC VARCHAR(200) NOT NULL,	
	CO_DIST_FISC INT NOT NULL,
	NO_DIST_FISC VARCHAR(50) NOT NULL,
	CO_TIPO_DOCU TINYINT NOT NULL,
	NO_TIPO_DOCU VARCHAR(50) NOT NULL,
	DE_NUME_DOCU CHAR(30) NOT NULL,
	DE_DIRE_CORR VARCHAR(200) NOT NULL,
	CO_DIST_CORR INT NOT NULL,
	NO_DIST_CORR VARCHAR(50) NOT NULL,
	DE_DIRE_INST VARCHAR(200) NOT NULL,
	CO_DIST_INST INT NOT NULL,
	NO_DIST_INST VARCHAR(50) NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	NO_MONE_FACT VARCHAR(30) NOT NULL,
	DE_SIMB_MONE_FACT CHAR(5) NOT NULL,-- SIMBOLO


	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TRIGGER TR_HMFACT ON TMFACT AFTER UPDATE,INSERT AS INSERT INTO HMFACT SELECT * FROM inserted;
GO
CREATE TABLE HMFACT_GLOS(
	CO_FACT_GLOS INT NOT NULL,
	CO_FACT BIGINT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	DE_PERI VARCHAR(200) NULL,
	NO_GLOS VARCHAR(100) NOT NULL,
	IM_MONT DECIMAL(12,2) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMFACT_GLOS ON TMFACT_GLOS AFTER UPDATE,INSERT AS INSERT INTO HMFACT_GLOS SELECT * FROM inserted;
GO
-- los cortes estan a nivel de negocios
CREATE TABLE HMCORT(
	CO_CORT INT NOT NULL ,
	CO_NEGO INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	CO_CIER_INIC INT NULL,
	CO_CIER_FIN INT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMCORT ON TMCORT AFTER UPDATE,INSERT AS INSERT INTO HMCORT SELECT * FROM inserted;
GO
-- las suspensiones estan a nivel de negocios
CREATE TABLE HMSUSP(
	CO_SUSP INT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	CO_PROD TINYINT NOT NULL,

	ST_SOAR BIT NULL DEFAULT 0,-- SI ES UNA OIT TIPO SOARC
	CO_OIT_INST INT NULL,
	CO_CIRC INT NULL,

	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	CO_CIER_INIC INT NULL,
	CO_CIER_FIN INT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL ,
	CO_USUA_MODI SMALLINT NULL ,
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TRIGGER TR_HMSUSP ON TMSUSP AFTER UPDATE,INSERT AS INSERT INTO HMSUSP SELECT * FROM inserted;
GO