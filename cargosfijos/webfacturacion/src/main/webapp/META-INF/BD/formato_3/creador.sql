USE GAF_FACTURACION_ESCENARIO;

CREATE TABLE TMPERF(
	CO_PERF SMALLINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_PERF VARCHAR(120) NOT NULL,
	ST_ELIM BIT DEFAULT 0,
);
GO
CREATE TABLE TMUSUA(
	CO_USUA SMALLINT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_PERF SMALLINT NOT NULL,
	NO_USUA VARCHAR(50) NULL,
	AP_USUA VARCHAR(50) NULL,
	DE_CORR VARCHAR(100) NULL,
	DE_USER CHAR(20) UNIQUE NOT NULL,
	DE_PASS VARCHAR(100) NOT NULL,
	DE_TOCK VARCHAR(100) NULL, -- TOCKEN
	ST_ELIM BIT DEFAULT 0,
	FOREIGN KEY (CO_PERF) REFERENCES TMPERF (CO_PERF),
);
GO
CREATE TABLE TMMODU(
	CO_MODU SMALLINT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NO_MODU VARCHAR(50) NOT NULL,
	DE_PACK VARCHAR(100) NOT NULL UNIQUE,-- clave que define a sencha, Desktop.panels.*****
	DE_ICON_CLSS VARCHAR(100) NULL,-- class icono css
	ST_ELIM BIT DEFAULT 0,
);
GO
CREATE TABLE TMITEM_MODU(
	CO_ITEM_MODU SMALLINT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_MODU SMALLINT NOT NULL,
	NO_ITEM_MODU VARCHAR(50),
	DE_PACK VARCHAR(100) NOT NULL UNIQUE,-- clave que define a sencha, Desktop.panels.*****
	ST_ELIM BIT DEFAULT 0,
	FOREIGN KEY (CO_MODU) REFERENCES TMMODU (CO_MODU)
);
GO


CREATE TABLE TMPERF_ITEM_MODU(
	CO_PERF SMALLINT NOT NULL,
	CO_ITEM_MODU SMALLINT NOT NULL,
	ST_ELIM BIT DEFAULT 0,
	FOREIGN KEY (CO_PERF) REFERENCES TMPERF (CO_PERF),
	FOREIGN KEY (CO_ITEM_MODU) REFERENCES TMITEM_MODU (CO_ITEM_MODU),
	CONSTRAINT ["Ya existe el item de modulo para este PERFIL"] UNIQUE (CO_PERF,CO_ITEM_MODU),
);
GO
CREATE TABLE TMTIPO_DOCU(
	CO_TIPO_DOCU TINYINT PRIMARY KEY IDENTITY (1,1),
	NO_TIPO_DOCU VARCHAR(30) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

);
GO
CREATE TABLE TMTIPO_CLIE(
	CO_TIPO_CLIE TINYINT PRIMARY KEY IDENTITY (1,1),
	NO_TIPO_CLIE VARCHAR(30) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMCLIE(
	CO_CLIE INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NO_RAZO VARCHAR(120) NULL,
	NO_CLIE VARCHAR(50) NULL,
	AP_CLIE VARCHAR(50) NULL,
	DE_CODI_BUM VARCHAR(10) NULL,
	DE_DIGI_BUM VARCHAR(5) NULL,-- digito verificador
	CO_SUCU_FISC INT NULL,
	CO_CONT_CLIE_REPR_LEGA INT NULL,
	CO_TIPO_CLIE TINYINT NULL,
	CO_TIPO_DOCU TINYINT NOT NULL,	
	DE_NUME_DOCU CHAR(30) NOT NULL,
	DE_EJEC VARCHAR(100) NULL,-- ejecutivo
	DE_SUB_GERE VARCHAR(100) NULL,-- sub gerente
	DE_SEGM VARCHAR(30) NULL,-- segmento
	CO_XLS CHAR (10) NULL,-- debug pruebas borrar
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

	FOREIGN KEY (CO_TIPO_DOCU) REFERENCES TMTIPO_DOCU (CO_TIPO_DOCU),
	FOREIGN KEY (CO_TIPO_CLIE) REFERENCES TMTIPO_CLIE (CO_TIPO_CLIE),
	CONSTRAINT ["Si es empresa solo debe tener razï¿½n social, si no lo es debe tener nombre y apellido."] CHECK (NO_RAZO<>NULL OR (NO_CLIE<>NULL AND AP_CLIE<>NULL)),
	CONSTRAINT [UQ_tipo_y_documento_unico_cliente] UNIQUE NONCLUSTERED (CO_TIPO_DOCU,DE_NUME_DOCU)
);
GO
CREATE TABLE TMCONT_CLIE(-- contacto cliente
	CO_CONT_CLIE INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_CLIE INT NOT NULL,
	CO_TIPO_DOCU TINYINT NULL,	
	DE_NUME_DOCU CHAR(30) NULL,
	NO_CONT_CLIE VARCHAR(100) NULL,
	AP_CONT_CLIE VARCHAR(100) NULL,
	DE_CORR VARCHAR(50) NULL,
	DE_TELE VARCHAR(50) NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

	FOREIGN KEY (CO_CLIE) REFERENCES TMCLIE (CO_CLIE),
	FOREIGN KEY (CO_TIPO_DOCU) REFERENCES TMTIPO_DOCU (CO_TIPO_DOCU),
	-- CONSTRAINT [UQ_tipo_y_documento_unico_contacto_cliente] UNIQUE NONCLUSTERED (CO_TIPO_DOCU,DE_NUME_DOCU)
);
GO
ALTER TABLE TMCLIE ADD CONSTRAINT fk_tmclie_cont_clie FOREIGN KEY (CO_CONT_CLIE_REPR_LEGA) REFERENCES TMCONT_CLIE (CO_CONT_CLIE);
GO
CREATE TABLE TMDEPA(
	CO_DEPA SMALLINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_DEPA VARCHAR(50) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMPROV(
	CO_PROV INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_PROV VARCHAR(50) NOT NULL,
	CO_DEPA SMALLINT NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_DEPA) REFERENCES TMDEPA (CO_DEPA)
);
GO
CREATE TABLE TMDIST(
	CO_DIST INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_DIST VARCHAR(50) NOT NULL,
	CO_PROV INT NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_PROV) REFERENCES TMPROV (CO_PROV)
);
GO
CREATE TABLE TMSUCU(
	CO_SUCU INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	DE_DIRE VARCHAR(200) NOT NULL,
    DE_REF_DIRE VARCHAR(200) NULL,
	CO_DIST INT NOT NULL,
	CO_CLIE INT NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_DIST) REFERENCES TMDIST (CO_DIST),
	FOREIGN KEY (CO_CLIE) REFERENCES TMCLIE (CO_CLIE),
);
GO
ALTER TABLE TMCLIE ADD CONSTRAINT fk_tmclie_sucu_fisc FOREIGN KEY (CO_SUCU_FISC) REFERENCES TMSUCU (CO_SUCU);
GO
CREATE TABLE TMPERI_FACT(-- PERIODO 15 DIAS, 1 MES ... (anual, semestral, trimestral, mensual )
	CO_PERI_FACT TINYINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_PERI_FACT VARCHAR(100) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMTIPO_FACT(-- VENCIDO O ADELANTADO
	CO_TIPO_FACT TINYINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_TIPO_FACT VARCHAR(100) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMMONE_FACT(-- SOLES O DOLARES
	CO_MONE_FACT TINYINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_MONE_FACT VARCHAR(100) NOT NULL,
	DE_SIMB CHAR(5) NOT NULL,-- SIMBOLO
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMPROD(
	CO_PROD TINYINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_TIPO_FACT TINYINT NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	CO_PERI_FACT TINYINT NOT NULL,
	NO_PROD VARCHAR(100) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_TIPO_FACT) REFERENCES TMTIPO_FACT (CO_TIPO_FACT),
	FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	FOREIGN KEY (CO_PERI_FACT) REFERENCES TMPERI_FACT (CO_PERI_FACT),
);
GO
CREATE TABLE TMPLAN_MEDI_INST(
	CO_PLAN_MEDI_INST TINYINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	NO_PLAN_MEDI_INST VARCHAR(30),-- Gilat  / Idirect  / Backup / SCP
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMPLAN(
	CO_PLAN INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_PROD TINYINT NOT NULL,
	NO_PLAN VARCHAR(100) NOT NULL,
	DE_VELO_SUBI VARCHAR(15) NULL, -- bytes
	DE_VELO_BAJA VARCHAR(15) NULL, -- bytes
	CO_PLAN_MEDI_INST TINYINT NULL,
	IM_MONTO DECIMAL(15,2) NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	CO_XLS CHAR (10) NULL,
	ST_BACKUP_BU BIT DEFAULT 0 NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	FOREIGN KEY (CO_PROD) REFERENCES TMPROD (CO_PROD),
	FOREIGN KEY (CO_PLAN_MEDI_INST) REFERENCES TMPLAN_MEDI_INST (CO_PLAN_MEDI_INST),
);
GO
CREATE TABLE TMSERV_SUPL(
	CO_SERV_SUPL INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_PROD TINYINT NOT NULL,
    CO_MONE_FACT TINYINT NOT NULL,
	NO_SERV_SUPL VARCHAR(100) NOT NULL,
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_AFEC_DETR BIT NOT NULL DEFAULT 0,-- AFECTO A DETRACCION
	CO_XLS CHAR (10) NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_PROD) REFERENCES TMPROD (CO_PROD),
        FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT)
);
GO
CREATE TABLE TMSERV_UNIC(-- Servicios suplementarios de cobro unico
	CO_SERV_UNIC INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_PROD TINYINT NOT NULL,
    CO_MONE_FACT TINYINT NOT NULL,
	NO_SERV_UNIC VARCHAR(100) NOT NULL,	
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_AFEC_DETR BIT NOT NULL DEFAULT 1,-- AFECTO A DETRACCION
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_PROD) REFERENCES TMPROD (CO_PROD),
    FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT)
);
GO
CREATE TABLE TMNEGO(
	CO_NEGO INT NOT NULL PRIMARY KEY,
	CO_SUCU_CORR INT NOT NULL,-- Sucursal de correspondencia
	CO_CLIE INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
	CO_TIPO_FACT TINYINT NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	CO_PERI_FACT TINYINT NOT NULL,
	-- DE_DIA_FACT TINYINT NULL,-- dia que el cliente factura cuando es trimestral, semestral anual ejm si es 12 factura 12/01/2015 12/04/2015 . . .
	ST_FACT_DEBU BIT NOT NULL DEFAULT 1, -- borrar para saber cual debe factura para pruebas
	ST_ELIM BIT DEFAULT 0,
	
	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_SUCU_CORR) REFERENCES TMSUCU (CO_SUCU),	
	FOREIGN KEY (CO_CLIE) REFERENCES TMCLIE (CO_CLIE),
	FOREIGN KEY (CO_PROD) REFERENCES TMPROD (CO_PROD),
	FOREIGN KEY (CO_TIPO_FACT) REFERENCES TMTIPO_FACT (CO_TIPO_FACT),
	FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	FOREIGN KEY (CO_PERI_FACT) REFERENCES TMPERI_FACT (CO_PERI_FACT),
	CONSTRAINT ["Solo si el periodo es mensual el tipo de facturacion puede ser vencido."] CHECK (CO_PERI_FACT=1 OR ((CO_PERI_FACT=2 OR CO_PERI_FACT=3 OR CO_PERI_FACT=4) AND CO_TIPO_FACT=2)),
);
GO
CREATE TABLE TMNEGO_COME(
	CO_NEGO_COME INT NOT NULL PRIMARY KEY IDENTITY(1,1),	
	CO_USUA SMALLINT NULL FOREIGN KEY (CO_USUA) REFERENCES TMUSUA (CO_USUA),
	CO_NEGO INT NULL FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	DE_COME VARCHAR(5120) NOT NULL,
	FH_CREO DATETIME NOT NULL,
);
GO
CREATE TABLE TMNEGO_CORR(
	CO_NEGO_CORR INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_NEGO INT NOT NULL FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	DE_CORR VARCHAR(100) NOT NULL,
	ST_ACTI BIT DEFAULT 1,
)
GO
CREATE TABLE TMMOTI_DESC( -- motivo desactivacion
	CO_MOTI_DESC TINYINT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NO_MOTI_DESC VARCHAR(100) NOT NULL
);
GO
CREATE TABLE TMNEGO_SUCU(
	CO_NEGO_SUCU INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_NEGO INT NOT NULL,
	CO_SUCU INT NOT NULL,
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,-- SI ES UNA OIT TIPO SOARC
	CO_OIT_INST INT NULL,
	CO_CIRC INT NULL,
	ST_SOAR_DESI BIT NULL DEFAULT 0,-- SI ES UNA OIT TIPO SOARC
	CO_OIT_DESI INT NULL,
	DE_ORDE_SERV VARCHAR(100) NULL,	-- orden de servicio
	DE_PLAZ_CONT VARCHAR(100) NULL,  -- plazo de contrato
	ST_ELIM BIT DEFAULT 0,

	CO_MOTI_DESC TINYINT NULL FOREIGN KEY (CO_MOTI_DESC) REFERENCES TMMOTI_DESC (CO_MOTI_DESC),
	DE_INFO_DESC VARCHAR(200) NULL,
        DE_OBSERV VARCHAR(200) NULL,

	CO_NEGO_SUCU_CESI_CONT_PADR INT NULL FOREIGN KEY (CO_NEGO_SUCU_CESI_CONT_PADR) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),--codigo de cesiÃ³n contractual que genero (quien es su padre)
	CO_NEGO_SUCU_CESI_CONT_HIJO INT NULL FOREIGN KEY (CO_NEGO_SUCU_CESI_CONT_HIJO) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),--codigo de cesiÃ³n contractual que genero (quien es su hijo)
	CO_NEGO_SUCU_MUDA_PADR INT NULL FOREIGN KEY (CO_NEGO_SUCU_MUDA_PADR) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),--codigo de mudanza que genero (quien es su padre)
	CO_NEGO_SUCU_MUDA_HIJO INT NULL FOREIGN KEY (CO_NEGO_SUCU_MUDA_HIJO) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),--codigo de mudanza que genero (quien es su hijo)
	
	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	FOREIGN KEY (CO_SUCU) REFERENCES TMSUCU (CO_SUCU),	
	CONSTRAINT ["No puede tener tipo de oit sin oit"] CHECK ((ST_SOAR_INST<>NULL AND CO_OIT_INST<>NULL) OR (ST_SOAR_INST=NULL AND CO_OIT_INST=NULL)),
	
	--CONSTRAINT ["AsAAA"] CHECK (exists(select 1))
	-- CONSTRAINT ["Ya existe registrada esta OIT."] UNIQUE (ST_SOAR,CO_OIT_INST),
	-- CONSTRAINT dupNulls_uqX UNIQUE (X,nullbuster)
	-- constraint ssn_unique UNIQUE (CO_CIRC)
	-- UNIQUE(CO_CIRC)
);
GO
CREATE TABLE TMNEGO_SUCU_PLAN(
	CO_NEGO_SUCU_PLAN INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_NEGO_SUCU INT NOT NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,
	CO_OIT_INST INT NULL,
	ST_SOAR_DESI BIT NULL DEFAULT 0,
	CO_OIT_DESI INT NULL,
	CO_PLAN INT NOT NULL,
	NO_PLAN VARCHAR(100), -- bk valor
	DE_VELO_SUBI VARCHAR(15) NULL, -- bk valor
	DE_VELO_BAJA VARCHAR(15) NULL, -- bk valor
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	FE_ULTI_FACT DATE NULL, -- ULTIMA FACTURACION
	-- ULTIMA FACTURACION Siguiente, esta es temporal para que cuando se termine el cierre se remplazase con la que diga en FE_ULTI_FACT
	-- Cuando se le da de baja a un negocio, el campo FE_ULTI_FACT se actualiza con FE_FIN
	FE_ULTI_FACT_SGTE DATE NULL,-- FE_ULTI_FACT_SGTE==>> FE_ULTI_FACT
	FE_ULTI_FACT_FINA DATE NULL,-- FE_ULTI_FACT_FINA se guarda la ultima fecha de facturacion
	IM_MONTO DECIMAL(15,2) NOT NULL,
	IM_SALD_APROX DECIMAL(15,2) NULL, -- SALDO APROXIMADO PARA CORTES Y SUSPENSIONES SIN FECHA DE RECONEXION
	
	CO_NEGO_SUCU_PLAN_CESI_CONT_PADR INT NULL,
	CO_NEGO_SUCU_PLAN_CESI_CONT_HIJO INT NULL,
	CO_NEGO_SUCU_PLAN_MUDA_PADR INT NULL,
	CO_NEGO_SUCU_PLAN_MUDA_HIJO INT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	CONSTRAINT ["La fecha de ultima facturaciÃ³n del plan no puede ser menor a la fecha de activaciÃ³n"] CHECK (FE_ULTI_FACT=NULL OR (FE_ULTI_FACT<=FE_INIC)),
	FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	FOREIGN KEY (CO_PLAN) REFERENCES TMPLAN (CO_PLAN),
	FOREIGN KEY (CO_NEGO_SUCU_PLAN_CESI_CONT_PADR) REFERENCES TMNEGO_SUCU_PLAN (CO_NEGO_SUCU_PLAN),
	FOREIGN KEY (CO_NEGO_SUCU_PLAN_CESI_CONT_HIJO) REFERENCES TMNEGO_SUCU_PLAN (CO_NEGO_SUCU_PLAN),
	FOREIGN KEY (CO_NEGO_SUCU_PLAN_MUDA_PADR) REFERENCES TMNEGO_SUCU_PLAN (CO_NEGO_SUCU_PLAN),
	FOREIGN KEY (CO_NEGO_SUCU_PLAN_MUDA_HIJO) REFERENCES TMNEGO_SUCU_PLAN (CO_NEGO_SUCU_PLAN),
);
GO
CREATE TABLE TMNEGO_SUCU_SERV_SUPL(
	CO_NEGO_SUCU_SERV_SUPL INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_NEGO_SUCU INT NOT NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,
	CO_OIT_INST INT NULL,
	ST_SOAR_DESI BIT NULL DEFAULT 0,
	CO_OIT_DESI INT NULL,
	CO_SERV_SUPL INT NOT NULL,
	NO_SERV_SUPL VARCHAR(100),
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	FE_ULTI_FACT DATE NULL, -- ULTIMA FACTURACION
	-- ULTIMA FACTURACION Siguiente, esta es temporal para que cuando se termine el cierre se remplazase con la que diga en FE_ULTI_FACT
	-- Cuando se le da de baja a un negocio, el campo FE_ULTI_FACT se actualiza con FE_FIN
	FE_ULTI_FACT_SGTE DATE NULL,-- FE_ULTI_FACT_SGTE==>> FE_ULTI_FACT
	FE_ULTI_FACT_FINA DATE NULL,-- FE_ULTI_FACT_FINA se guarda la ultima fecha de facturacion
	IM_MONTO DECIMAL(15,2) NOT NULL,
	IM_SALD_APROX DECIMAL(15,2) NULL, -- SALDO APROXIMADO PARA CORTES Y SUSPENSIONES SIN FECHA DE RECONEXION
	ST_AFEC_DETR BIT NOT NULL DEFAULT 0,-- AFECTO A DETRACCION
	
	CO_NEGO_SUCU_SERV_SUPL_CESI_CONT_PADR INT NULL,
	CO_NEGO_SUCU_SERV_SUPL_CESI_CONT_HIJO INT NULL,
	CO_NEGO_SUCU_SERV_SUPL_MUDA_PADR INT NULL,
	CO_NEGO_SUCU_SERV_SUPL_MUDA_HIJO INT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	CONSTRAINT ["La fecha de ultima facturaciï¿½n de servicio suplementario no puede ser menor a la fecha de activaciï¿½n"] CHECK (FE_ULTI_FACT=NULL OR (FE_ULTI_FACT<=FE_INIC)),
	FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	FOREIGN KEY (CO_SERV_SUPL) REFERENCES TMSERV_SUPL (CO_SERV_SUPL),
	FOREIGN KEY (CO_NEGO_SUCU_SERV_SUPL_CESI_CONT_PADR) REFERENCES TMNEGO_SUCU_SERV_SUPL (CO_NEGO_SUCU_SERV_SUPL),
	FOREIGN KEY (CO_NEGO_SUCU_SERV_SUPL_CESI_CONT_HIJO) REFERENCES TMNEGO_SUCU_SERV_SUPL (CO_NEGO_SUCU_SERV_SUPL),
	FOREIGN KEY (CO_NEGO_SUCU_SERV_SUPL_MUDA_PADR) REFERENCES TMNEGO_SUCU_SERV_SUPL (CO_NEGO_SUCU_SERV_SUPL),
	FOREIGN KEY (CO_NEGO_SUCU_SERV_SUPL_MUDA_HIJO) REFERENCES TMNEGO_SUCU_SERV_SUPL (CO_NEGO_SUCU_SERV_SUPL),
);
GO
CREATE TABLE TMNEGO_SUCU_SERV_UNIC(-- servicios suplementarios unicos un solo cobro
	CO_NEGO_SUCU_SERV_UNIC INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_NEGO_SUCU INT NOT NULL,
	ST_SOAR_INST BIT NULL DEFAULT 0,
	CO_OIT_INST INT NULL,
	CO_SERV_UNIC INT NOT NULL,
	NO_SERV_UNIC VARCHAR(100),
	IM_MONTO DECIMAL(15,2) NOT NULL,
	ST_AFEC_DETR BIT NOT NULL DEFAULT 1,-- AFECTO A DETRACCION	
	ST_ELIM BIT DEFAULT 0,
	CO_CIER_COBR INT NULL,-- cierre que se cobro el servicio unico, si es NULL aun no se cobra

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	FOREIGN KEY (CO_SERV_UNIC) REFERENCES TMSERV_UNIC (CO_SERV_UNIC)
);
GO
CREATE TABLE TMCIER(
	CO_CIER INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_PROD TINYINT NOT NULL,
	NU_PERI TINYINT NOT NULL,
	NU_ANO  SMALLINT NOT NULL,
	NU_TIPO_CAMB DECIMAL(12,2) NOT NULL,
	DE_RAIZ_RECI BIGINT NOT NULL,-- desde que numero comienza a crear el recibo
	DE_RAIZ_FACT BIGINT NOT NULL,-- desde que numero comienza a crear la factura (Detracciones)
	FE_EMIS DATE NOT NULL,-- fecha de emisiï¿½n
	FE_VENC DATE NOT NULL,-- fecha de vencimiento
	ST_CIER TINYINT NOT NULL, -- Estado 1 pendiente, 2 en cierre, 3 termino cierre, 4 cerrado
	FH_INIC DATETIME NULL,
	FH_FIN DATETIME NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_PROD) REFERENCES TMPROD (CO_PROD),
	CONSTRAINT ["UN CIERRE POR PRODUCTO EN UN MES DADO"] UNIQUE (CO_PROD,NU_PERI,NU_ANO),
);
GO
CREATE TABLE TMAJUS(
	CO_AJUS INT NOT NULL PRIMARY KEY IDENTITY (1,1), -- ajustes
	CO_NEGO INT NOT NULL CONSTRAINT fk_tmajus_nego FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO), 
	DE_GLOS VARCHAR(200) NOT NULL,	
	IM_MONT DECIMAL(10,2) NOT NULL, 
	ST_AFEC_IGV BIT NOT NULL,-- afecto a IGV
	CO_CIER_APLI INT NULL CONSTRAINT fk_tmajus_cier_apli FOREIGN KEY (CO_CIER_APLI) REFERENCES TMCIER (CO_CIER), -- en que cierre se aplico si es null no se aplico y generara nota de credito
	ST_PEND BIT NOT NULL DEFAULT 1,-- los que estan pendiente aplicar, 1 pendiente , 0 atendido. Cuando se cierre el ciclo se cambiara a 0 (no pendiente).

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMNEGO_PROM( -- PromociÃ³n por negocio
	CO_NEGO_PROM INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_NEGO INT NOT NULL CONSTRAINT fk_tmnego_nego_prom FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO), 
	DE_TIPO TINYINT NOT NULL, -- los tipos son 1 por porcentaje, 2 por monto
	IM_VALO DECIMAL(10,2) NOT NULL, -- en el caso tipo monto la moneda es idiferrente
	ST_PLAN BIT NOT NULL DEFAULT 0,-- se aplica por plan, solo sirve para cuando el tipo es %
	ST_SERV_SUPL BIT NOT NULL DEFAULT 0,-- se aplica por SS, solo sirve para cuando el tipo es %
	DE_PERI_INIC TINYINT NOT NULL,
	DE_ANO_INIC SMALLINT NOT NULL,
	DE_PERI_FIN TINYINT NOT NULL,
	DE_ANO_FIN SMALLINT NOT NULL,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
CREATE TABLE TMNEGO_SUCU_PROM( -- PromociÃ³n por negocio
	CO_NEGO_SUCU_PROM INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_NEGO_SUCU INT NOT NULL CONSTRAINT fk_tmnegosucu_nego_prom FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	DE_TIPO TINYINT NOT NULL, -- los tipos son 1 por porcentaje, 2 por monto
	IM_VALO DECIMAL(10,2) NOT NULL, -- en el caso tipo monto la moneda es idiferrente
	ST_PLAN BIT NOT NULL DEFAULT 0,-- se aplica por plan, solo sirve para cuando el tipo es %
	ST_SERV_SUPL BIT NOT NULL DEFAULT 0,-- se aplica por SS, solo sirve para cuando el tipo es %
	DE_PERI_INIC TINYINT NOT NULL,
	DE_ANO_INIC SMALLINT NOT NULL,
	DE_PERI_FIN TINYINT NOT NULL,
	DE_ANO_FIN SMALLINT NOT NULL,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
);
GO
ALTER TABLE TMNEGO_SUCU_SERV_UNIC ADD CONSTRAINT fk_tmnego_sucu_serv_unic_cier FOREIGN KEY (CO_CIER_COBR) REFERENCES TMCIER (CO_CIER);
GO
CREATE TABLE TMCIER_LOGS(
	CO_CIER_LOGS BIGINT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_CIER INT NULL,
	CO_NEGO INT NULL,
	CO_NEGO_SUCU INT NULL,
	ST_ERRO BIT DEFAULT 0 NOT NULL,
	DE_LOG VARCHAR(1024) NOT NULL,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_CIER) REFERENCES TMCIER (CO_CIER),
	FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
)
GO
CREATE TABLE TMNEGO_SALD(
	CO_NEGO_SALD INT NOT NULL PRIMARY KEY IDENTITY (1,1),
	CO_NEGO INT NOT NULL,
	CO_CIER INT NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	IM_MONT DECIMAL(12,2) NOT NULL,
	DE_SALD VARCHAR(100),
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),

	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

	FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	FOREIGN KEY (CO_CIER) REFERENCES TMCIER (CO_CIER),
	FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT)
)
GO
CREATE TABLE TMRECI( -- RECIBO
	CO_RECI BIGINT NOT NULL PRIMARY KEY,
	CO_CIER INT NOT NULL,
	CO_NEGO INT NOT NULL,
	DE_PERI VARCHAR(200) NOT NULL,
	IM_NETO DECIMAL(12,2) NOT NULL,
	IM_AJUS_SIGV DECIMAL(12,2) NOT NULL,
	IM_IGV DECIMAL(12,2) NOT NULL,
	IM_TOTA DECIMAL(12,2) NOT NULL,
	IM_AJUS_NIGV DECIMAL(12,2) NOT NULL,

	IM_INST DECIMAL(12,2) NOT NULL,
	IM_SERV_MENS DECIMAL(12,2) NOT NULL,
	IM_ALQU DECIMAL(12,2) NOT NULL,
	IM_OTRO DECIMAL(12,2) NOT NULL,
	IM_DESC DECIMAL(12,2) NOT NULL,
	IM_DIF_CARGO_FIJO DECIMAL(12,2) NOT NULL,
	ST_ANUL BIT DEFAULT 0 NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	-- historico
	FE_EMIS DATE NOT NULL,-- fecha de emisiï¿½n
	FE_VENC DATE NOT NULL,-- fecha de vencimiento	
	FE_INI DATE NOT NULL,-- fecha de Periodo Inicio
	FE_FIN DATE NOT NULL,-- fecha de Periodo Fin
	CO_CLIE INT NOT NULL, -- no se modifica los codigos solo los textos
	DE_CODI_BUM VARCHAR(20) NULL,-- codigo bum - digito verficador
	NO_CLIE VARCHAR(100) NOT NULL,
	DE_DIRE_FISC VARCHAR(200) NOT NULL,	
	CO_DIST_FISC INT NOT NULL,
	NO_DIST_FISC VARCHAR(50) NOT NULL,
	CO_TIPO_DOCU TINYINT NOT NULL,
	NO_TIPO_DOCU VARCHAR(50) NOT NULL,
	DE_NUME_DOCU CHAR(30) NOT NULL,-- numero documento del cliente (RUC , DNI)
	DE_DIRE_CORR VARCHAR(200) NOT NULL,
    DE_REF_DIRE_CORR VARCHAR(200) NULL,
	CO_DIST_CORR INT NOT NULL,
	NO_DIST_CORR VARCHAR(50) NOT NULL,
	DE_DIRE_INST VARCHAR(200) NOT NULL,
	CO_DIST_INST INT NOT NULL,
	NO_DIST_INST VARCHAR(50) NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	NO_MONE_FACT VARCHAR(30) NOT NULL,
	DE_SIMB_MONE_FACT CHAR(5) NOT NULL,-- SIMBOLO

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

	FOREIGN KEY (CO_CLIE) REFERENCES TMCLIE (CO_CLIE),
	FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	FOREIGN KEY (CO_DIST_INST) REFERENCES TMDIST (CO_DIST),
	FOREIGN KEY (CO_DIST_CORR) REFERENCES TMDIST (CO_DIST),
	FOREIGN KEY (CO_DIST_FISC) REFERENCES TMDIST (CO_DIST),
	FOREIGN KEY (CO_TIPO_DOCU) REFERENCES TMTIPO_DOCU (CO_TIPO_DOCU),

	FOREIGN KEY (CO_CIER) REFERENCES TMCIER (CO_CIER),
	FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
);
GO
CREATE TABLE TMTIPO_GLOS(
	CO_TIPO_GLOS INT NOT NULL PRIMARY KEY,
	NO_TIPO_GLOS VARCHAR(100) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL
);
GO
CREATE TABLE TMRECI_GLOS(
	CO_RECI_GLOS INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_RECI BIGINT NOT NULL,
	CO_NEGO_SUCU INT,
	DE_DIRE_SUCU VARCHAR(200),
	NO_GLOS VARCHAR(100) NOT NULL,
	IM_MONT DECIMAL(12,2) NOT NULL,
	TI_GLOS TINYINT NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_RECI) REFERENCES TMRECI (CO_RECI),
	FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	FOREIGN KEY (TI_GLOS) REFERENCES TMTIPO_GLOS(CO_TIPO_GLOS)
);
GO
-- Facturas las que se generan de las detracciones
CREATE TABLE TMFACT(
	CO_FACT BIGINT NOT NULL PRIMARY KEY,
	CO_CIER INT NOT NULL,
	CO_NEGO INT NOT NULL,
	IM_VALO_VENT DECIMAL(12,2) NOT NULL,
	IM_VALO_DESC DECIMAL(12,2) NOT NULL,
	IM_VALO_VENT_NETO DECIMAL(12,2) NOT NULL,
	IM_IGV DECIMAL(12,2) NOT NULL,
	IM_TOTA DECIMAL(12,2) NOT NULL,
	DE_MONT VARCHAR(100) NOT NULL,
	IM_AJUS_NIGV DECIMAL(12,2) NOT NULL,
	IM_INST DECIMAL(12,2) NOT NULL,
	IM_ALQU DECIMAL(12,2) NOT NULL,
	IM_OTRO DECIMAL(12,2) NOT NULL,
	ST_AFECTO_DETRACCION BIT DEFAULT 0 NOT NULL,
	ST_ANUL BIT DEFAULT 0 NOT NULL,
	ST_ELIM BIT DEFAULT 0 NOT NULL,



	-- historico
	FE_EMIS DATE NOT NULL,-- fecha de emisiï¿½n
	FE_VENC DATE NOT NULL,-- fecha de vencimiento	
	CO_CLIE INT NOT NULL,
	DE_CODI_BUM VARCHAR(20) NULL,
	NO_CLIE VARCHAR(100) NOT NULL,
	DE_DIRE_FISC VARCHAR(200) NOT NULL,	
	CO_DIST_FISC INT NOT NULL,
	NO_DIST_FISC VARCHAR(50) NOT NULL,
	CO_TIPO_DOCU TINYINT NOT NULL,
	NO_TIPO_DOCU VARCHAR(50) NOT NULL,
	DE_NUME_DOCU CHAR(30) NOT NULL,
	DE_DIRE_CORR VARCHAR(200) NOT NULL,
    DE_REF_DIRE_CORR VARCHAR(200) NULL,
	CO_DIST_CORR INT NOT NULL,
	NO_DIST_CORR VARCHAR(50) NOT NULL,
	DE_DIRE_INST VARCHAR(200) NOT NULL,
	CO_DIST_INST INT NOT NULL,
	NO_DIST_INST VARCHAR(50) NOT NULL,
	CO_MONE_FACT TINYINT NOT NULL,
	NO_MONE_FACT VARCHAR(30) NOT NULL,
	DE_SIMB_MONE_FACT CHAR(5) NOT NULL,-- SIMBOLO


	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,

	FOREIGN KEY (CO_CLIE) REFERENCES TMCLIE (CO_CLIE),
	FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	FOREIGN KEY (CO_DIST_INST) REFERENCES TMDIST (CO_DIST),
	FOREIGN KEY (CO_DIST_CORR) REFERENCES TMDIST (CO_DIST),
	FOREIGN KEY (CO_DIST_FISC) REFERENCES TMDIST (CO_DIST),
	FOREIGN KEY (CO_TIPO_DOCU) REFERENCES TMTIPO_DOCU (CO_TIPO_DOCU),


	FOREIGN KEY (CO_CIER) REFERENCES TMCIER (CO_CIER),
	FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
)
GO
CREATE TABLE TMFACT_GLOS(
	CO_FACT_GLOS INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_FACT BIGINT NOT NULL,
	CO_NEGO_SUCU INT NOT NULL,
	DE_PERI VARCHAR(200) NULL,
	NO_GLOS VARCHAR(100) NOT NULL,
	IM_MONT DECIMAL(12,2) NOT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_FACT) REFERENCES TMFACT (CO_FACT),
	FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU)
);
GO
-- los cortes estan a nivel de negocios
CREATE TABLE TMCORT(
	CO_CORT INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_NEGO INT NOT NULL,
	CO_PROD TINYINT NOT NULL,
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	CO_CIER_INIC INT NULL,
	CO_CIER_FIN INT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	FOREIGN KEY (CO_PROD) REFERENCES TMPROD (CO_PROD),
	FOREIGN KEY (CO_CIER_INIC) REFERENCES TMCIER (CO_CIER),
	FOREIGN KEY (CO_CIER_INIC) REFERENCES TMCIER (CO_CIER),
);
GO
/*
-- se cargan lo cortes por cierre pero la fecha de fin se carga en otro cierre pero por corte solo pueden existir 2 registros en esta tabla
-- la que contenga el campo nulo en co_cier es la que se considera para el proximo cierre
CREATE TABLE TMCORT_CIER(
	CO_CORT INT NOT NULL,
	CO_CIER INT NULL,
	FA_FIN BIT NOT NULL DEFAULT 0,
	CONSTRAINT ["Solo se puede registrar dos modificaciones del mismo corte."] UNIQUE (CO_CORT,FA_FIN),
	CONSTRAINT ["Un mismo corte por cierre"] UNIQUE (CO_CORT,CO_CIER),
	FOREIGN KEY (CO_CORT) REFERENCES TMCORT (CO_CORT),
	FOREIGN KEY (CO_CIER) REFERENCES TMCIER (CO_CIER)
)
GO*/
-- las suspensiones estan a nivel de negocios
CREATE TABLE TMSUSP(
	CO_SUSP INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_NEGO_SUCU INT NOT NULL,
	CO_PROD TINYINT NOT NULL,

	ST_SOAR BIT NULL DEFAULT 0,-- SI ES UNA OIT TIPO SOARC
	CO_OIT_INST INT NULL,
	CO_CIRC INT NULL,

	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	CO_CIER_INIC INT NULL,
	CO_CIER_FIN INT NULL,
	ST_ELIM BIT DEFAULT 0,

	CO_USUA_CREO SMALLINT NULL FOREIGN KEY (CO_USUA_CREO) REFERENCES TMUSUA (CO_USUA),
	CO_USUA_MODI SMALLINT NULL FOREIGN KEY (CO_USUA_MODI) REFERENCES TMUSUA (CO_USUA),
	FH_CREO DATETIME NULL,
	FH_MODI DATETIME NULL,
	FOREIGN KEY (CO_CIER_INIC) REFERENCES TMCIER (CO_CIER),
	FOREIGN KEY (CO_CIER_INIC) REFERENCES TMCIER (CO_CIER),
	FOREIGN KEY (CO_PROD) REFERENCES TMPROD (CO_PROD),

	FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	CONSTRAINT ["No puede tener tipo de oit sin oit.(Suspensiï¿½n)"] CHECK ((ST_SOAR<>NULL AND CO_OIT_INST<>NULL) OR (ST_SOAR=NULL AND CO_OIT_INST=NULL))

);
GO
/*
-- se cargan las suspensiones por cierre pero la fecha de fin se carga en otro cierre pero por corte solo pueden existir 2 registros en esta tabla
-- la que contenga el campo nulo en co_cier es la que se considera para el proximo cierre
CREATE TABLE TMSUSP_CIER(
	CO_SUSP INT NOT NULL,
	CO_CIER INT NULL,
	FA_FIN BIT NOT NULL DEFAULT 0,
	CONSTRAINT ["Solo se puede registrar dos modificaciones de la misma suspensiï¿½n."] UNIQUE (CO_SUSP,FA_FIN),
	CONSTRAINT ["Un misma suspensiï¿½n por cierre"] UNIQUE (CO_SUSP,CO_CIER),
	FOREIGN KEY (CO_SUSP) REFERENCES TMSUSP (CO_SUSP),
	FOREIGN KEY (CO_CIER) REFERENCES TMCIER (CO_CIER)
);
GO*/
/*
CREATE TABLE TMCIER_DATA_NEGO(
	CO_CIER_DATA_NEGO INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	DE_DIRE_SUCU VARCHAR(200) NULL,
	DE_ORDE VARCHAR(100) NULL,
);
*/
CREATE TABLE TMMIGR_NEGO_SUCU(
	CO_MIGR_NEGO_SUCU INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_NEGO_ORIG INT NOT NULL FOREIGN KEY (CO_NEGO_ORIG) REFERENCES TMNEGO (CO_NEGO),
	CO_NEGO_DEST INT NOT NULL FOREIGN KEY (CO_NEGO_DEST) REFERENCES TMNEGO (CO_NEGO),
	CO_NEGO_SUCU INT NOT NULL FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	FH_REGI DATETIME NOT NULL,
	CO_USUA_REGI SMALLINT NOT NULL FOREIGN KEY (CO_USUA_REGI) REFERENCES TMUSUA (CO_USUA),
);
GO
CREATE TABLE TMCIER_DATA_NEGO(
	CO_CIER_DATA_NEGO INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_NEGO INT NOT NULL FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	CO_CIER INT NULL FOREIGN KEY (CO_CIER) REFERENCES TMCIER (CO_CIER),
);
GO
CREATE TABLE TMCIER_DATA_SUCU(
	CO_CIER_DATA_SUCU INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_CIER_DATA_NEGO INT NOT NULL FOREIGN KEY (CO_CIER_DATA_NEGO) REFERENCES TMCIER_DATA_NEGO (CO_CIER_DATA_NEGO),
	CO_NEGO_SUCU INT NOT NULL FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	DE_DIRE_SUCU VARCHAR(200) NULL,

	CO_DEPA SMALLINT NULL FOREIGN KEY (CO_DEPA) REFERENCES TMDEPA (CO_DEPA),
	NO_DEPA VARCHAR(50) NULL,
	CO_PROV INT NULL FOREIGN KEY (CO_PROV) REFERENCES TMPROV (CO_PROV),
	NO_PROV VARCHAR(50) NULL,
	CO_DIST INT NULL FOREIGN KEY (CO_DIST) REFERENCES TMDIST (CO_DIST),
	NO_DIST VARCHAR(50) NULL,

	DE_ORDE VARCHAR(100) NULL,
);
GO
CREATE TABLE TMCIER_DATA_PLAN(
	CO_CIER_DATA_PLAN INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_CIER_DATA_SUCU INT NULL FOREIGN KEY (CO_CIER_DATA_SUCU) REFERENCES TMCIER_DATA_SUCU (CO_CIER_DATA_SUCU),
	CO_NEGO_SUCU_PLAN INT NOT NULL FOREIGN KEY (CO_NEGO_SUCU_PLAN) REFERENCES TMNEGO_SUCU_PLAN (CO_NEGO_SUCU_PLAN),
	CO_RECI BIGINT NULL FOREIGN KEY (CO_RECI) REFERENCES TMRECI (CO_RECI),
	CO_FACT BIGINT NULL FOREIGN KEY (CO_FACT) REFERENCES TMFACT (CO_FACT),

	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	CO_MONE_FACT TINYINT NOT NULL FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	IM_MONT DECIMAL(12,2) NOT NULL,
	DE_NOMB VARCHAR(100) NULL,
	ST_TIPO_DEVO TINYINT NULL, -- 1 desactivacion,2 cortes , 3 suspensiones, 4 promociÃ³n, 5 downgrade
	ST_TIPO_COBR TINYINT NULL, -- 1 normal, 2 upgrade  
);
GO
CREATE TABLE TMCIER_DATA_SERV_SUPL(
	CO_CIER_DATA_SERV_SUPL INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_CIER_DATA_SUCU INT NULL FOREIGN KEY (CO_CIER_DATA_SUCU) REFERENCES TMCIER_DATA_SUCU (CO_CIER_DATA_SUCU),
	CO_NEGO_SUCU_SERV_SUPL INT NOT  NULL FOREIGN KEY (CO_NEGO_SUCU_SERV_SUPL) REFERENCES TMNEGO_SUCU_SERV_SUPL (CO_NEGO_SUCU_SERV_SUPL),
	CO_RECI BIGINT NULL FOREIGN KEY (CO_RECI) REFERENCES TMRECI (CO_RECI),
	CO_FACT BIGINT NULL FOREIGN KEY (CO_FACT) REFERENCES TMFACT (CO_FACT),
	ST_AFEC_DETR BIT NOT NULL DEFAULT 0,
	FE_INIC DATE NOT NULL,
	FE_FIN DATE NULL,
	CO_MONE_FACT TINYINT NOT NULL FOREIGN KEY (CO_MONE_FACT) REFERENCES TMMONE_FACT (CO_MONE_FACT),
	IM_MONT DECIMAL(12,2) NOT NULL,
	DE_NOMB VARCHAR(100) NULL,
	ST_TIPO_DEVO TINYINT NULL, -- 1 desactivacion,2 cortes , 3 suspensiones, 4 promociÃ³n, 5 downgrade
	ST_TIPO_COBR TINYINT NULL, -- 1 normal, 2 upgrade
);
GO
CREATE TABLE TMCIER_DATA_PROM_MONT(
	CO_CIER_DATA_PROM INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_CIER_DATA_SUCU INT NULL FOREIGN KEY (CO_CIER_DATA_SUCU) REFERENCES TMCIER_DATA_SUCU (CO_CIER_DATA_SUCU),
	CO_CIER_DATA_NEGO INT NULL FOREIGN KEY (CO_CIER_DATA_NEGO) REFERENCES TMCIER_DATA_NEGO (CO_CIER_DATA_NEGO),

	CO_RECI BIGINT NULL FOREIGN KEY (CO_RECI) REFERENCES TMRECI (CO_RECI),
	CO_FACT BIGINT NULL FOREIGN KEY (CO_FACT) REFERENCES TMFACT (CO_FACT),

	IM_MONT DECIMAL(12,2) NOT NULL,
	DE_NOMB VARCHAR(100) NULL
);
GO
CREATE TABLE TMCIER_DATA_SERV_UNIC(
	CO_CIER_DATA_SERV_UNIC INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_CIER_DATA_SUCU INT NULL FOREIGN KEY (CO_CIER_DATA_SUCU) REFERENCES TMCIER_DATA_SUCU (CO_CIER_DATA_SUCU),
	CO_RECI BIGINT NULL FOREIGN KEY (CO_RECI) REFERENCES TMRECI (CO_RECI),
	CO_FACT BIGINT NULL FOREIGN KEY (CO_FACT) REFERENCES TMFACT (CO_FACT),
	IM_MONT DECIMAL(12,2) NOT NULL,
	DE_NOMB VARCHAR(100) NULL
);
GO
CREATE TABLE TMNEGO_HISTORICO(
	CO_NEGO_HIST INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_NEGO INT NOT NULL FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	DE_INFORMACION VARCHAR(5120) NOT NULL,
	
	FH_REGI DATETIME NOT NULL,
	CO_USUA_REGI SMALLINT NOT NULL FOREIGN KEY (CO_USUA_REGI) REFERENCES TMUSUA (CO_USUA),
);
GO
CREATE TABLE TMNEGO_SUCU_HISTORICO(
	CO_NEGO_SUCU_HIST INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_NEGO INT NOT NULL FOREIGN KEY (CO_NEGO) REFERENCES TMNEGO (CO_NEGO),
	CO_NEGO_SUCU INT NOT NULL FOREIGN KEY (CO_NEGO_SUCU) REFERENCES TMNEGO_SUCU (CO_NEGO_SUCU),
	DE_INFORMACION VARCHAR(5120) NOT NULL,
	
	FH_REGI DATETIME NOT NULL,
	CO_USUA_REGI SMALLINT NOT NULL FOREIGN KEY (CO_USUA_REGI) REFERENCES TMUSUA (CO_USUA),
);
GO
CREATE TABLE TMCLIE_HISTORICO(
	CO_CLIE_HIST INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	CO_CLIE INT NOT NULL FOREIGN KEY (CO_CLIE) REFERENCES TMCLIE (CO_CLIE),
	DE_INFORMACION VARCHAR(5120) NOT NULL,
	
	FH_REGI DATETIME NOT NULL,
	CO_USUA_REGI SMALLINT NOT NULL FOREIGN KEY (CO_USUA_REGI) REFERENCES TMUSUA (CO_USUA),
);

GO


CREATE PROCEDURE sp_crear_detalle(@inicio_ano int,@inicio_periodo int,  @fin_ano int,@fin_periodo int ,  @CO_NEGO int) AS
BEGIN
	declare  @CO_CIER_DATA_NEGO int,
	@MAX_ID_TS int,@VA_ID_TS int, @CO_NEGO_SUCU int,@CO_CIER_DATA_SUCU int, @CIER_DATA_SUCU int,@fecha_inicio varchar(100),@fecha_fin varchar(100),@dia_fin varchar(100);

	WHILE (@fin_ano*100+@fin_periodo)>(@inicio_ano*100+@inicio_periodo)
		BEGIN		
			SET @inicio_periodo=@inicio_periodo+1
			if @inicio_periodo=13
				BEGIN
					SET @inicio_periodo=1;
					SET @inicio_ano=@inicio_ano+1;
				END

			INSERT INTO TMCIER_DATA_NEGO (CO_NEGO) VALUES (@CO_NEGO);
			SET @CO_CIER_DATA_NEGO=@@IDENTITY;
			SELECT * INTO #TS FROM TMNEGO_SUCU WHERE CO_NEGO=@CO_NEGO;
			ALTER TABLE #TS ADD CCO_NEGO_SUCU int;
			UPDATE #TS SET CCO_NEGO_SUCU=CO_NEGO_SUCU;
			ALTER TABLE #TS DROP COLUMN  CO_NEGO_SUCU;
			ALTER TABLE #TS ADD id_key INT IDENTITY(1,1);
			select @MAX_ID_TS = MAX([id_key]) from #TS;
			SET @VA_ID_TS=1
			SET @fecha_inicio=CONCAT(@inicio_ano , '-' , @inicio_periodo , '-01')
			SET @fecha_fin=CONCAT(@inicio_ano , '-' , @inicio_periodo , '-')
			SET @dia_fin= CASE @inicio_periodo
				WHEN 1 THEN '31'
				WHEN 2 THEN '28'
				WHEN 3 THEN '31'
				WHEN 4 THEN '30'
				WHEN 5 THEN '31'
				WHEN 6 THEN '30'
				WHEN 7 THEN '31'
				WHEN 8 THEN '31'
				WHEN 9 THEN '30'
				WHEN 10 THEN '31'
				WHEN 11 THEN '30'
				WHEN 12 THEN '31'
			END
			IF (@inicio_ano % 2 =0) and @inicio_periodo=2
				BEGIN
					SET @dia_fin='29'
				END
			SET @fecha_fin=CONCAT(@fecha_fin , @dia_fin)
			WHILE (@VA_ID_TS<=@MAX_ID_TS)
				BEGIN
					SELECT @CO_NEGO_SUCU=CCO_NEGO_SUCU FROM #TS WHERE id_key=@VA_ID_TS;
				
					INSERT INTO TMCIER_DATA_SUCU (CO_CIER_DATA_NEGO,CO_NEGO_SUCU,DE_DIRE_SUCU,DE_ORDE) VALUES (@CO_CIER_DATA_NEGO,@CO_NEGO_SUCU,NULL,NULL);
					SET @CO_CIER_DATA_SUCU=@@IDENTITY;
					INSERT INTO TMCIER_DATA_PLAN (CO_CIER_DATA_SUCU,CO_NEGO_SUCU_PLAN,FE_INIC,FE_FIN,CO_MONE_FACT,IM_MONT,DE_NOMB,ST_TIPO_COBR) VALUES
						(@CO_CIER_DATA_SUCU,
							(SELECT CO_NEGO_SUCU_PLAN FROM TMNEGO_SUCU_PLAN WHERE CO_NEGO_SUCU=@CO_NEGO_SUCU),
							@fecha_inicio,@fecha_fin,
							(SELECT a.CO_MONE_FACT FROM TMPLAN a INNER JOIN TMNEGO_SUCU_PLAN b ON a.CO_PLAN=b.CO_PLAN WHERE b.CO_NEGO_SUCU=@CO_NEGO_SUCU),
							(SELECT b.IM_MONTO FROM TMNEGO_SUCU_PLAN a INNER JOIN TMPLAN b ON b.CO_PLAN=a.CO_PLAN WHERE CO_NEGO_SUCU=@CO_NEGO_SUCU),NULL,1
						);

				

					SET @VA_ID_TS=@VA_ID_TS+1;
				END
			DROP TABLE #TS;

		
		END
END
